plugins {
    id 'java-library'
    id 'maven-publish'
    id 'net.kyori.indra' version '2.0.6'
    id 'net.kyori.indra.publishing' version '2.0.6'
    id 'net.kyori.blossom' version '1.3.0'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

/**
 * Version setup
 */
def baseVersion = project.project_version
def baseGroup = project.maven_group
def localPropertiesFile = file('local.properties')
def localProperties = new Properties()

if (localPropertiesFile.exists()) {
    localPropertiesFile.withInputStream { stream ->
        localProperties.load(stream)
    }
}

def envVars = System.getenv()
def currentEnvironment = envVars.getOrDefault("ENV", localProperties.getProperty("environment", "dev"))
def isDevelopment = currentEnvironment == "dev"
def localRepoDir = null
ext.versionModifier = null

if (localProperties.hasProperty("localRepoDir")) {
    localRepoDir = localProperties.getProperty("localRepoDir")
} else if (project.hasProperty("localRepoDir")) {
    localRepoDir = project.findProperty("localRepoDir")
}

if (isDevelopment) {
    versionModifier = "-SNAPSHOT"
}

def constructVersion(baseVersion) {
    def result = baseVersion + versionModifier
    return result
}

version = constructVersion(baseVersion)
group = baseGroup

println("Info: currentEnvironment = $currentEnvironment")
println("Info: isDevelopment = $isDevelopment")
println("Info: localRepoDir = $localRepoDir")
println("Info: versionModifier = $versionModifier")
println("Info: version = " + version)

base {
    archivesName = project.archives_base_name
}

repositories {
    mavenCentral()

    maven {
        url 'https://ci.lucko.me/plugin/repository/everything/'
    }

    maven {
        url 'https://repo.lucko.me/'
    }

    // // placeholders-common seems to have been removed from the lucko repo
    flatDir {
        dirs '../libs/'
    }

    maven {
        url 'https://repo.velocitypowered.com/snapshots/'
    }

    maven {
        url 'https://repo.essentialsx.net/n3fs/'
    }

    if (isDevelopment && localRepoDir) {
        maven {
            url localRepoDir
        }
    }
}

def blackblockNbtVersion = constructVersion(project.blackblock_nbt_version)
def fuzzywuzzyVersion = project.fuzzywuzzy_version

dependencies {
    compileOnly "com.velocitypowered:velocity-api:${project.velocity_api_version}"
    annotationProcessor "com.velocitypowered:velocity-api:${project.velocity_api_version}"

    compileOnly "net.luckperms:api:${project.luckperms_api_version}"
    compileOnly "uk.co.n3fs.mc:Neutron-N3FS:${project.neutron_n3fs_version}"

    implementation "me.lucko.luckperms:placeholders-common:${project.placeholders_common_version}"
    implementation "net.kyori:adventure-serializer-configurate3:${project.adventure_configurate3_version}"
    implementation "net.kyori:adventure-text-minimessage:${project.adventure_text_minimessage_version}"

    implementation "rocks.blackblock:nbt:${blackblockNbtVersion}"

    implementation "me.xdrop:fuzzywuzzy:${fuzzywuzzyVersion}"
}

indra {
    github('N3FS', 'Neutron') {
        ci(true)
    }
    mitLicense()

    publishReleasesTo('n3fs', 'https://repo.essentialsx.net/n3fs/')
    publishSnapshotsTo('n3fs', 'https://repo.essentialsx.net/n3fs/')

    configurePublications {
        pom {
            description.set('A simple global chat plugin for Velocity.')
            url.set('https://n3fs.co.uk')
            developers {
                developer {
                    id.set('mdcfe')
                    name.set('MD')
                    email.set('md@n3fs.co.uk')
                }
                developer {
                    id.set('lucko')
                    name.set('Luck')
                }
            }
        }
    }

    javaVersions {
        target(21)
        minimumToolchain(16)
    }
}

blossom {
    replaceToken '@ID@', name.toLowerCase()
    replaceToken '@NAME@', name
    replaceToken '@VERSION@', version
    replaceToken '@DESCRIPTION@', description
}

shadowJar {
    dependencies {
        include(dependency('me.lucko.luckperms:placeholders-common'))
        include(dependency('net.kyori:adventure-serializer-configurate3'))
        include(dependency("me.xdrop:fuzzywuzzy:${fuzzywuzzyVersion}"))
        include(dependency("rocks.blackblock:nbt:${blackblockNbtVersion}"))
    }

    //relocate 'me.lucko.luckperms.placeholders', 'uk.co.n3fs.gchat.libs.luckperms.placeholders'
    //relocate 'net.kyori.adventure.serializer.configurate3', 'uk.co.n3fs.gchat.libs.adventure.configurate3'
}

build.dependsOn shadowJar

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21
